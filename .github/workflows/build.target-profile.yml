name: Build OpenWrt device firmware

permissions:
  contents: write

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      subtarget:
        required: true
        type: string
      profile:
        required: true
        type: string
      dorelease:
        required: false
        type: boolean
        default: false
  
  workflow_dispatch:
    inputs:
      target:
        required: true
        type: string
      subtarget:
        required: true
        type: string
      profile:
        required: true
        type: string
      dorelease:
        required: true
        type: boolean
        default: false

jobs:

  build_firmware:
    name: Build firmware (${{ inputs.target }}, ${{ inputs.subtarget }}, ${{ inputs.profile }})
    runs-on: ubuntu-22.04

    steps:
      - name: Run apt tasks
        run: |
          sudo apt -y remove --auto-remove --purge aspnet* docker* dotnet* firefox* google* mono* snapd*
          sudo rm -rf /etc/docker /etc/mono /usr/lib/mono /usr/libexec/docker /usr/share/dotnet
          sudo apt -y update
          sudo apt -y full-upgrade --auto-remove --purge
          sudo apt -y install --auto-remove --purge b43-fwcutter bash bcc bin86 binutils bzip2 flex g++ gawk gcc gcc-multilib gettext git gzip help2man intltool libboost-dev libelf-dev libncurses-dev libssl-dev libthread-queue-any-perl libusb-dev libxml-parser-perl make openjdk-8-jdk-headless patch perl-modules python3-dev sharutils time unzip util-linux wget xsltproc zip zlib1g-dev bison build-essential clang file g++-multilib python3-distutils rsync
          sudo apt -y clean
  
      - name: df check
        run: df -h

      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Import cached target build base
        id: import-cached-base
        uses: actions/cache/restore@v4
        with:
          key: ${{ inputs.subtarget }}.${{ inputs.target }}.build-${{ github.run_id }}.${{ github.run_attempt }}
          restore-keys: ${{ inputs.subtarget }}.${{ inputs.target }}.build-
          fail-on-cache-miss: true
          path: openwrt

      - name: Import build configuration (target specification)
        working-directory: openwrt
        run: cat ../target_config/${{ inputs.target }}.${{ inputs.subtarget }}.config > .config

      - name: Import build configuration (profile specification)
        working-directory: openwrt
        run: cat ../target_config/${{ inputs.target }}.${{ inputs.subtarget }}.${{ inputs.profile }}.config >> .config

      - name: Apply build configuration
        working-directory: openwrt
        run: make defconfig

      - name: Build firmware
        working-directory: openwrt
        run: make -j$(nproc)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts.${{ inputs.target }}.${{ inputs.subtarget }}.${{ inputs.profile }}
          compression-level: 9
          overwrite: true
          path: |
            openwrt/bin/targets/${{ inputs.target }}/${{ inputs.subtarget }}/*
            !openwrt/bin/targets/${{ inputs.target }}/${{ inputs.subtarget }}/packages

  release_firmware:
    name: Release firmware (${{ inputs.target }}, ${{ inputs.subtarget }}, ${{ inputs.profile }})
    if: ${{ inputs.dorelease == 1 }}
    needs: build_firmware
    uses: ./.github/workflows/release.target-profile.yml
    with:
      target: ${{ inputs.target }}
      subtarget: ${{ inputs.subtarget }}
      profile: ${{ inputs.profile }}
